{
    "problem": "Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.",
    "examples": [
        {
            "input": ["h", "e", "l", "l", "o"],
            "expected_output": ["o", "l", "l", "e", "h"]
        },
        {
            "input": ["H", "a", "n", "n", "a", "h"],
            "expected_output": ["h", "a", "n", "n", "a", "H"]
        }
    ],
    "solution": "class Solution:\n    def reverse_string(s):\n    left, right = 0, len(s) - 1\n    while left < right:\n        s[left], s[right] = s[right], s[left]\n        left += 1\n        right -= 1",
    "incorrect_solution": "class Solution:\n    def reverse_string_incorrect(s):\n    s = s[::-1]",
    "test_cases": [
        {
            "input": ["h", "e", "l", "l", "o"],
            "expected_output": ["o", "l", "l", "e", "h"]
        },
        {
            "input": ["H", "a", "n", "n", "a", "h"],
            "expected_output": ["h", "a", "n", "n", "a", "H"]
        },
        {
            "input": ["a", "b", "c", "d", "e"],
            "expected_output": ["e", "d", "c", "b", "a"]
        }
    ]

}